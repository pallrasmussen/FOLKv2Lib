name: CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-test-pack:
    runs-on: ubuntu-latest
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore /warnaserror

      - name: Test
        run: |
          if ls **/*Tests.csproj 1> /dev/null 2>&1; then
            dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory TestResults
          else
            echo "No test projects found"
          fi

      - name: Convert coverage to Cobertura
        if: always()
        run: |
          if [ -d TestResults ]; then
            reportFile=$(find TestResults -name 'coverage.cobertura.xml' | head -1)
            if [ -f "$reportFile" ]; then
              echo "Found cobertura report: $reportFile"
            else
              echo "No cobertura report found"; ls -R TestResults | head -50
            fi
          fi

      - name: Upload coverage to Codecov
        if: success() && env.CODECOV_TOKEN != ''
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        uses: codecov/codecov-action@v4
        with:
          files: "$(find TestResults -name 'coverage.cobertura.xml' | tr '\n' ',')"
          fail_ci_if_error: false

      - name: Pack
        run: dotnet pack FOLKv2.Lib.csproj --configuration Release -o artifacts /p:ContinuousIntegrationBuild=true

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: artifacts/*.nupkg

      - name: Upload symbols artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-symbols
          path: artifacts/*.snupkg

      - name: Publish (NuGet) on tag
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          if [ -z "${NUGET_API_KEY}" ]; then
            echo "NUGET_API_KEY secret not set; skipping publish";
            exit 0;
          fi
          for pkg in artifacts/*.nupkg; do
            dotnet nuget push "$pkg" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate;
          done

      - name: Publish (GitHub Packages) on tag
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for pkg in artifacts/*.nupkg; do
            dotnet nuget push "$pkg" --api-key $GITHUB_TOKEN --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate;
          done

      - name: Code coverage summary
        if: always()
        run: |
          if [ -d TestResults ]; then
            echo "Test results generated."; ls -R TestResults | head -100
          fi
